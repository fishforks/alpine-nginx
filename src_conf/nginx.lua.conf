user  www-data www-data;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 51200;

# 动态模块加载 http://nginx.org/en/docs/ngx_core_module.html#load_module
load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;
load_module modules/ngx_http_set_misc_module.so;
load_module modules/ngx_http_echo_module.so;

events {
  use epoll;
  worker_connections 51200;
  multi_accept on;
}

http {
  include   /etc/nginx/mime.types;
  default_type application/octet-stream;
  # docker 容器中 客户端的真实IP地址为$http_x_forwarded_for 容器ID $remote_addr
  log_format  main  '$http_x_forwarded_for - $remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
   # json 格式输出 日志 不带请求参数
  log_format jsonlog escape=json '{ "@req_time": "$time_iso8601", "client_ip": "$http_x_forwarded_for","docker_ip": "$remote_addr","req_time": "$request_time","resp_time": "$upstream_response_time","status": $status,"x_forwarded_for": "$http_x_forwarded_for","referer": "$http_referer","request": "$request","upstream_addr": "$upstream_addr","bytes_sent":$body_bytes_sent,"user_agent": "$http_user_agent" }';

  #包含请求参数 params的json日志
  log_format pjsonlog escape=json '{ "@req_time": "$time_iso8601", '
                       '"client_ip": "$http_x_forwarded_for",'
                       '"docker_ip": "$remote_addr",'
                       '"req_time": "$request_time",'
                       '"resp_time": "$upstream_response_time",'
                       '"status": $status,'
                       '"x_forwarded_for": "$http_x_forwarded_for",'
                       '"referer": "$http_referer",'
                       '"request": "$request",'
                       '"upstream_addr": "$upstream_addr",'
                       '"bytes_sent":$body_bytes_sent,'
                       '"params":"$request_body",' # 记录请求参数, 会记录所有参数,仅测试或者非正常情况下记录
                       '"user_agent": "$http_user_agent" }';
   # 403 禁止访问日志
   map $status $forbidden_loggable {
        ~^403  1;
        default 0;
   }
   map $status $notfound_loggable {
        ~^404  1;
        default 0;
   }
   # 5xx 服务器错误日志
   map $status $server_error_loggable {
        ~^[5]  1;
        default 0;
   }
  # 非5xx, 403 日志
  map $status $loggable {
        ~^[23]  1;
        ~^[5]  0;
        ~^403  0;
        ~^404  0;
        ~^[4]  1;
        default 0;
  }
  # Variable for access log filename date
  map $time_iso8601 $logdate {
    #正则匹配时间变量 time_iso8601
    # 命名分组匹配
     "~^(?<ymd>\d{4}-\d{2}-\d{2})"   $ymd;
    # 匹配分组
    # "~^(\d{4})-(\d{2})-(\d{2})"  $1$2$3;
    default   0;
  }

  access_log    /var/log/nginx/${host}_access_${logdate}.log jsonlog if=$loggable;
  access_log    /var/log/nginx/${host}_404_${logdate}.log pjsonlog if=$notfound_loggable;
  access_log    /var/log/nginx/${host}_403_${logdate}.log pjsonlog if=$forbidden_loggable;
  access_log    /var/log/nginx/${host}_5xx_${logdate}.log pjsonlog if=$server_error_loggable;
  # 使用buffer 日志,不可使用变量名称
  #access_log  /var/log/nginx/access.gz  main gzip flush=1m;
  #error_log /var/log/nginx/error.log;

  server_names_hash_bucket_size 128;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 32k;
  client_max_body_size 1024m;
  client_body_buffer_size 10m;
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 120;
  server_tokens off;
  tcp_nodelay on;

  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 128k;
  fastcgi_intercept_errors on;

  #Gzip Compression
  gzip on;
  gzip_buffers 16 8k;
  gzip_comp_level 6;
  gzip_http_version 1.1;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
    text/javascript application/javascript application/x-javascript
    text/x-json application/json application/x-web-app-manifest+json
    text/css text/plain text/x-component
    font/opentype application/x-font-ttf application/vnd.ms-fontobject
    image/x-icon;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  #If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.
  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  #SSI 相关
  ssi on;
  ssi_silent_errors  on;
  ssi_types text/shtml;
  ssi_value_length 256;

  #naxsi https://github.com/nbs-system/naxsi/wiki/naxsi-compile
  include /etc/nginx/naxsi_core.rules;
  
  # http://nginx.org/en/docs/http/ngx_http_limit_req_module.html
  limit_req_zone $binary_remote_addr zone=one:10m rate=2r/s;
  # http://nginx.org/en/docs/http/ngx_http_limit_conn_module.html
  limit_conn_zone $binary_remote_addr zone=addr:10m;
  # lua rest core
  lua_package_path "/etc/nginx/lua/lib/0.10.15/?.lua;;";
  #lua_package_path '/etc/nginx/lua/lib/0.10.15/?.lua;/usr/local/lib/lua/?.lua;;';
  init_by_lua_block {
    require "resty.core"
    collectgarbage("collect")
  }
  # lua rest core end
  charset utf-8;

  include /etc/nginx/conf.d/*.conf;
}
